#!/usr/bin/env ruby

preprocess do
  overrides = items.select { |item| item[:__override__] }
  overrides.each do |override|
    items.delete_if do |item|
      item.identifier == override[:__overridden_identifier__]
    end
    override.identifier = override[:__overridden_identifier__]
  end

  # Add metadata to support special handling for installed apps.
  items.select { |item| item.identifier.match?('/apps/**/*') }
    .each { |item| item.update_attributes(kind: 'app') }

  # items.each do |i|
  #   ::STDERR.puts "=== i: #{(i).inspect rescue $!.message}"
  #   ::STDERR.puts "  = i.attributes: #{(i.attributes).inspect rescue $!.message}"
  # end
end

compile '/environment.*' do
  filters_from_extensions(item).each do |f|
    filter f
  end
  layout '/environment.*'

  write nil
end

compile '/apps/*' do
  filters_from_extensions(item).each do |f|
    filter f
  end
  layout '/installed_app.*'

  write nil
end

compile '/**/*.html' do
  layout '/default.*'

  if item.identifier =~ '**/index.*'
    write item.identifier.to_s
  else
    write item.identifier.without_ext + '/index.html'
  end
end

compile '/**/*.html.erb' do
  filter :erb
  layout '/default.*'

  target =
    if item.identifier =~ '**/index.*'
      item.identifier.without_exts + '.html'
    else
      item.identifier.without_exts + '/index.html'
    end

  write target
end

compile '/**/*.md' do
  filter :kramdown
  layout '/default.*'

  if item.identifier =~ '**/index.*'
    write item.identifier.to_s
  else
    write item.identifier.without_ext + '/index.html'
  end
end

compile '/**/*.scss' do
  filter :sass, syntax: :scss
  write @item.identifier.without_ext + '.css'
end

compile '/**/*' do
  write item.identifier.to_s
end

layout '/**/*', :erb
