#!/usr/bin/env ruby

preprocess do
  overrides = items.select { |item| item[:__override__] }
  overrides.each do |override|
    items.delete_if do |item|
      item.identifier == override[:__overridden_identifier__]
    end
    override.identifier = override[:__overridden_identifier__]
  end

  # items.each do |i|
  #   ::STDERR.puts "=== i: #{(i).inspect rescue $!.message}"
  # end
end

compile '/**/*.html' do
  layout '/default.*'

  if item.identifier =~ '**/index.*'
    write item.identifier.to_s
  else
    write item.identifier.without_ext + '/index.html'
  end
end

compile '/**/*.html.erb' do
  filter :erb
  layout '/default.*'

  target =
    if item.identifier =~ '**/index.*'
      item.identifier.without_exts + '.html'
    else
      item.identifier.without_exts + '/index.html'
    end

  write target
end

compile '/__app__/*' do
  filter :kramdown
  write nil
end

compile '/__environment__' do
  filter :kramdown
  write nil
end

# This is an example rule that matches Markdown (.md) files, and filters them
# using the :kramdown filter. It is commented out by default, because kramdown
# is not bundled with Nanoc or Ruby.
#
compile '/**/*.md' do
  filter :kramdown
  layout '/default.*'

  if item.identifier =~ '**/index.*'
    write item.identifier.to_s
  else
    write item.identifier.without_ext + '/index.html'
  end
end

compile '/**/*' do
  write item.identifier.to_s
end

layout '/**/*', :erb
